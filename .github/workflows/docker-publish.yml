name: Build

on:
  schedule:
    - cron:  '0 0 * * *'
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:



jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        scalaVersion:
          - '2.12.18'
          - '2.13.15'
          - '3.3.4'
        baseImage: [
          { base: 'graalvm-community', version: '23.0.1-ol9-20241015', registry: 'ghcr.io/graalvm/' },
          { base: 'eclipse-temurin', version: '21.0.5_11-jdk-jammy' },
          { base: 'eclipse-temurin', version: '17.0.8.1_1-jdk-jammy' },
          { base: 'eclipse-temurin', version: '11.0.20.1_1-jdk-jammy' },
          { base: 'eclipse-temurin', version: '17.0.8.1_1-jdk-focal' },
          { base: 'eclipse-temurin', version: '11.0.20.1_1-jdk-focal' },
        ]
        platforms: ['linux/amd64,linux/arm64']
    steps:
    - name: Log in to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3.2.0
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3.8.0
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Get latest Mill version
      id: get_mill_version
      run: |
        MILL_VERSION=$(
          curl --silent -L https://github.com/com-lihaoyi/mill/releases |
          grep -i -w -o '>[0-9]*\.[0-9]*\.[0-9]*</a>' |
          grep -i -w -o '[0-9]*\.[0-9]*\.[0-9]*' |
          sort --version-sort | tail -n 1)
        [[ -z "$MILL_VERSION" ]] && { echo "Failed to get latest mill version" ; exit 1; }
        echo "VERSION=$MILL_VERSION" >> $GITHUB_OUTPUT
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
          images: |
            nightscape/scala-mill
          tags: |
            type=ref,event=branch,pattern={{branch}}
            type=raw,value=${{ matrix.baseImage.base }}-${{ matrix.baseImage.version }}_${{ steps.get_mill_version.outputs.VERSION }}_${{ matrix.scalaVersion }}
            type=raw,value=latest,enable=${{ matrix.scalaVersion == '3.3.4' && matrix.baseImage.base == 'graalvm-community' }}
    - name: Build
      uses: docker/bake-action@v5
      with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: image-all
          set: |
            image-all.args.MILL_VERSION=${{ steps.get_mill_version.outputs.VERSION }}
            image-all.args.SCALA_VERSION=${{ matrix.scalaVersion }}
            image-all.args.BASE_IMAGE=${{ matrix.baseImage.registry }}${{ matrix.baseImage.base }}:${{ matrix.baseImage.version }}
            *.cache-from=type=gha,scope=provenance
            *.cache-to=type=gha,scope=provenance,mode=max
          push: ${{ github.event_name != 'pull_request' }}
